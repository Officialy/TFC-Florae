package tfcflorae.world.biomes;

import java.util.Random;
import javax.annotation.ParametersAreNonnullByDefault;

import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.ChunkPos;
import net.minecraft.world.World;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeDecorator;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.terraingen.DecorateBiomeEvent;
import net.minecraftforge.event.terraingen.TerrainGen;

import net.dries007.tfc.util.climate.ClimateTFC;
import net.dries007.tfc.world.classic.chunkdata.ChunkDataTFC;
import net.dries007.tfc.world.classic.worldgen.WorldGenSandTFC;

import tfcflorae.api.registries.TFCFRegistries;
import tfcflorae.api.types.PlantTFCF;
import tfcflorae.world.worldgen.WorldGenPlantTFCF;

@ParametersAreNonnullByDefault
public class BiomeDecoratorTFCF extends BiomeDecorator
{
    private final int waterPlantsPerChunk;

    private final WorldGenPlantTFCF plantGen;
    private int standardCount = 0;
    private int waterCount = 0;
    private int waterSeaCount = 0;


    public BiomeDecoratorTFCF(int lilyPadPerChunk, int waterPlantsPerChunk)
    {
        this.waterPlantsPerChunk = waterPlantsPerChunk;

        this.clayGen = null;
        this.sandGen = null;
        this.gravelGen = null;
        this.flowerGen = null;
        this.mushroomBrownGen = null;
        this.mushroomRedGen = null;
        this.bigMushroomGen = null;

        plantGen = new WorldGenPlantTFCF();

        sandGen = new WorldGenSandTFC(7);

        for (PlantTFCF plant : TFCFRegistries.PLANTS.getValuesCollection())
        {
            switch (plant.getPlantType())
            {
                case WATER:
                case TALL_WATER:
                case EMERGENT_TALL_WATER:
                    waterCount++;
                    break;
                case WATER_SEA:
                case TALL_WATER_SEA:
                case EMERGENT_TALL_WATER_SEA:
                    waterSeaCount++;
                    break;
                default:
                    standardCount++;
            }
        }
    }

    @Override
    public void decorate(final World world, final Random rng, final Biome biome, final BlockPos chunkPos)
    {
        ChunkPos forgeChunkPos = new ChunkPos(chunkPos); // actual ChunkPos instead of BlockPos, used for events
        MinecraftForge.EVENT_BUS.post(new DecorateBiomeEvent.Pre(world, rng, forgeChunkPos));

        ChunkDataTFC data = ChunkDataTFC.get(world, chunkPos);
        if (!data.isInitialized()) return;

        final float avgTemperature = ClimateTFC.getAvgTemp(world, chunkPos);
        final float rainfall = ChunkDataTFC.getRainfall(world, chunkPos);
        final float floraDensity = data.getFloraDensity(); // Use for various plant based decoration (tall grass, those vanilla jungle shrub things, etc.)
        final float floraDiversity = data.getFloraDiversity();

        this.chunkPos = chunkPos;
        // todo: settings for all the rarities?

        if (TerrainGen.decorate(world, rng, forgeChunkPos, DecorateBiomeEvent.Decorate.EventType.FLOWERS))
        {
            for (PlantTFCF plant : TFCFRegistries.PLANTS.getValuesCollection())
            {
                if (plant.isValidTempForWorldGen(avgTemperature) && plant.isValidRain(rainfall))
                {
                    plantGen.setGeneratedPlant(plant);
                    switch (plant.getPlantType())
                    {
                        case WATER:
                        case TALL_WATER:
                        case EMERGENT_TALL_WATER:
                        {
                            for (int i = rng.nextInt(Math.round(waterCount / floraDiversity)); i < floraDensity * waterPlantsPerChunk; i++)
                            {
                                BlockPos blockPos = world.getPrecipitationHeight(chunkPos.add(rng.nextInt(16) + 8, 0, rng.nextInt(16) + 8));
                                plantGen.generate(world, rng, blockPos);
                            }
                            break;
                        }
                        case WATER_SEA:
                        case TALL_WATER_SEA:
                        case EMERGENT_TALL_WATER_SEA:
                        {
                            for (int i = rng.nextInt(Math.round(waterSeaCount / floraDiversity)); i < floraDensity * waterPlantsPerChunk; i++)
                            {
                                BlockPos blockPos = world.getPrecipitationHeight(chunkPos.add(rng.nextInt(16) + 8, 0, rng.nextInt(16) + 8));
                                plantGen.generate(world, rng, blockPos);
                            }
                            break;
                        }
                        case STANDARD:
                        {
                            for (float i = rng.nextInt(Math.round((standardCount + 32) / floraDiversity)); i < (1 + floraDensity) * 3; i++)
                            {
                                BlockPos blockPos = world.getHeight(chunkPos.add(rng.nextInt(16) + 8, 0, rng.nextInt(16) + 8));
                                plantGen.generate(world, rng, blockPos);
                            }
                        }
                    }
                }
            }
        }

        MinecraftForge.EVENT_BUS.post(new DecorateBiomeEvent.Post(world, rng, forgeChunkPos));
    }
}